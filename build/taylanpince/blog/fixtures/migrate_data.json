[{"pk": 1, "model": "blog.category", "fields": {"slug": "web-development", "title": "Web Development"}}, {"pk": 1, "model": "blog.posttype", "fields": {"icon": "", "slug": "article", "title": "Article"}}, {"pk": 2, "model": "blog.post", "fields": {"body": "The famous XMLHttpRequest object, when used to get the data directly through the responseText method, only supports UTF-8. Unfortunately, there are times when I am not able to define UTF-8 as my main encoding method and I needed a solution to be able to use the features of AJAX regardless of the language the site was in.\r\n\r\nOne option was to use the responseXML method rather than the responseText, as I read somewhere that it was possible to change the encoding through the XML and make the browser understand the content wasn't in UTF-8. That's a good idea, but the problem is that parsing XML through JavaScript is still a huge issue, especially due to the different approaches taken by different browsers, and I didn't want to get into that just to fix a seemingly simple(r) encoding problem.\r\n\r\nThe first solution came to me when I started looking at PHP rather than JavaScript.  I put a simple header() announcement at the beginning of the PHP file that was going to be loaded in a DIV element through AJAX, and redefined the encoding of the document.\r\n\r\n@@ php\r\n    header(\"Content-type: text/html; charset=ISO-8859-9\");\r\n@@ end\r\n\r\nSimple though it may seem, this one line of code fixed the issue in almost all browsers, except Internet Explorer. I hate IE just as most web developers and designers do, but I could not ignore the fact that 70% of my visitors were still using this cursed web browser. So I had to continue looking for another solution.\r\n\r\nI finally managed to create a compatible PHP code by letting go of my original encoding and embracing UTF-8. The solution was to use PHP's Multibyte String capability in order to convert the original text into UTF-8.\r\n\r\n@@ php\r\n    header(\"Content-type: application/x-javascript; charset=UTF-8\");\r\n    \r\n    echo mb_convert_encoding(\"\u00fc\u00a0\u00dc \u00f6 \u00d6\u00a0\u015f\u00a0\u015e \u011f \u011e \u0131 \u0130\", \"UTF-8\", \"ISO-8859-9\");\r\n@@ end\r\n\r\nThis time, the header() call defines the encoding as UTF-8 and the content type as javascript just to make sure more intelligent browsers like Safari won't try to use the encoding of the parent page. Then, we convert just the text part to UTF-8 from ISO-8859-9 using the mb_convert_encoding() function. The result is happily displayed in all browsers.\r\n\r\nOf course, if you are going to use this conversion regularly, you might want to create your own PHP function for encoding conversion.\r\n\r\n@@ php\r\n    function encodeAJAX($str)\r\n    {\r\n        return mb_convert_encoding($str, \"UTF-8\", \"ISO-8859-9\");\r\n    }\r\n    \r\n    echo encodeAJAX(\"\u00fc \u00dc \u00f6 \u00d6 \u015f \u015e \u011f \u011e \u0131 \u0130\");\r\n@@ end\r\n\r\nI hope this solution helps other people use the AJAX technology with multilingual sites.", "tags": "ajax, php", "title": "AJAX and Multibyte Character Support", "creation_date": "2006-02-06 23:24:00", "teaser": "I love AJAX, and I realize that there are more than enough tutorials on the subject floating around the web these days (my favourite is still the one over at the [Apple Developer Connection](http://developer.apple.com/internet/webcontent/xmlhttpreq.html)). But when I wanted to use a simple AJAX menu for a site I was developing in Turkish, I quickly realized that there are some issues about character encoding in dynamically loaded AJAX elements, and that there are no apparent solutions.", "link": "", "published": 1, "change_date": "2008-11-22 17:05:55", "type": 1, "slug": "ajax-and-multibyte-character-support", "categories": [1]}}, {"pk": 3, "model": "blog.post", "fields": {"body": "There seems to be a whole lot of documentation on the subject on technorati's web site, but it is all geared towards people who use readymade blogging systems like [wordpress](http://www.wordpress.org) or [textpattern](http://www.textpattern.com). I don't like those because I am too curious about technology to use something I did not develop myself. If it can be done, I have to make it myself. Hence this blog.\r\n\r\nSo if you are interested in installing XML-RPC functionality to your PHP based site, read on, it's fairly easy. First of all, you need the [XML-RPC for PHP package](http://phpxmlrpc.sourceforge.net/) and have a PHP  installation with the XML-RPC module. After downloading the package, make sure you have --with-xmlrpc by checking your phpinfo(). The package offers a very easy to use class for creating an XML-RPC client and optionally a server as well. What I needed, and probably what you will need as well, is only the client file, which is conveniently called xmlrpc.inc.\r\n\r\n*A quick note here, it might not be a problem for an open source class like XML-RPC to use the .inc extension on their files. However, these files can be easily accessed and the code can be seen through a web browser if you are not careful. I simply name all my include files .inc.php for that matter.*\r\n\r\nAfter putting the xmlrpc.inc file in your include path, creating a client that sends a simple XML-RPC message is quite easy. Here is an example:\r\n\r\n@@ php\r\ninclude(\"./xmlrpc.inc.php\");\r\n\r\nfunction pingService()\r\n{\r\n  // TECHNORATI PING\r\n  $client = new xmlrpc_client(\"/rpc/ping\", \"rpc.technorati.com\", 80);\r\n  $message = new xmlrpcmsg(\"weblogUpdates.ping\", array(\r\n    new xmlrpcval(\"The Taylan Pince Blog\"), \r\n    new xmlrpcval(\"http://www.taylanpince.com/blog/\")\r\n  ));\r\n\r\n  $client->send($message);\r\n}\r\n\r\npingService();\r\n@@ end\r\n\r\nAnd there it is. If you call the function pingService every time you edit or add a new entry, technorati will check your blog for the updated content, and hopefully you, and I, will both get some nice visitors to our blogs who would read our ramblings and ramble a little bit themselves by leaving comments. The world will be a better place, and we will feel good, and pray the gods of the internet for sending us more and more visitors before we go to bed every night.\r\n\r\nUpdate: I just added a couple of lines of code to ping [weblogs.com](http://www.weblogs.com) as well. That place seems to be pinged by a thousand blogs every minute, so I don't think there is much use for it, but it still is possible:\r\n\r\n@@ php\r\n  // WEBLOGS.COM\r\n  $client = new xmlrpc_client(\"/RPC2\", \"rpc.weblogs.com\", 80);\r\n  $message = new xmlrpcmsg(\"weblogUpdates.ping\", array(\r\n    new xmlrpcval(\"The Taylan Pince Blog\"),\r\n    new xmlrpcval(\"http://www.taylanpince.com/blog\")\r\n  ));\r\n\t\r\n  $client->send($message);\r\n@@ end", "tags": "technorati, del.icio.us, xmlrpc", "title": "Technorati and XML-RPC Pinging", "creation_date": "2006-02-05 17:09:33", "teaser": "I spent some time today to research the ways I could \"advertise\" my new blog on the web. I knew about [del.icio.us](http://del.icio.us) and other web goodies like [technorati](http://technorati.com), but I had never actually used them before. After a bit of googling around and a crash course on tags and pinging, I set up a simple XML-RPC ping module that would notify technorati every time i added or edited an entry here.", "link": "", "published": 1, "change_date": "2008-11-22 17:23:13", "type": 1, "slug": "technorati-and-xml-rpc-pinging", "categories": [1]}}, {"pk": 4, "model": "blog.post", "fields": {"body": "The huge increase in the upcoming Web 2.0 technologies aside, it seems like web developers and interface designers are getting together in the \"real\" world and sharing ideas constantly. Here is a list of some really cool gatherings I found out about just recently:\r\n\r\n- [TorCampDemoCamp](http://barcamp.org/TorCampDemoCamp3)\r\n\r\n- [CocoaDevHouseParty](http://barcamp.org/CocoaDevHouseParty)\r\n\r\n- [Queen Street Commons](http://queenstreetcommons.org/)\r\n\r\n- [Mash Pit](http://mashpit.org/)\r\n\r\nAlso, there are some very exciting Web 2.0 startups brewing around. My favourites are [Shopify](http://www.shopify.com/), which made me bang my head on the table for not thinking of it before, and [StikiPad](http://www.stikipad.com/).\r\n\r\nIt looks like I will be going to bed really late these days just so I can catch with all these new developments around the web.\r\n\r\nUpdate: I just read an interesting post on [Mark Evans' blog](http://evans.blogware.com/blog/_archives/2006/1/26/1724091.html) talking about the same subject. There should definitely be more activity in Toronto in terms of a community. I think [David Crow](http://www.davidcrow.ca) is one of the few people who are trying to accomplish that.", "tags": "democamp", "title": "Social Geekness", "creation_date": "2006-02-08 17:27:22", "teaser": "I feel like I have been living on a deserted island for the last four years. Since I moved to Toronto four years ago, I have been spending most of my time developing web applications and learning as fast as I could. But it was only after I found myself right in the middle of the blogosphere a couple of weeks ago that I realized how much I have been missing.", "link": "", "published": 1, "change_date": "2008-11-22 17:30:34", "type": 1, "slug": "social-geekness", "categories": [1]}}]
